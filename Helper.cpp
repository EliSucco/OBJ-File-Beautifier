#include <Windows.h>
#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <fstream>
#include <sstream>
#include <tchar.h>

using namespace std;

string NormalizeSpace(string data) {
    string sb;
    bool previousIsWhitespace = false;
    for (unsigned int i = 0; i < data.length(); i++) {
        if (isspace(data[i])) {
            if (previousIsWhitespace) {
                continue;
            }
            previousIsWhitespace = true;
        }
        else {
            previousIsWhitespace = false;
        }
        sb += data[i];
    }
    return sb;
}
vector<string> Split(string _StrOriginal, string _delim) {
    vector<string> splittedString;
    size_t startIndex = 0;
    size_t endIndex = 0;
    while ((endIndex = _StrOriginal.find(_delim, startIndex)) < _StrOriginal.size()) {
        string val = _StrOriginal.substr(startIndex, endIndex - startIndex);
        splittedString.push_back(val);
        startIndex = endIndex + _delim.size();
    }
    if (startIndex < _StrOriginal.size()) {
        string val = _StrOriginal.substr(startIndex);
        splittedString.push_back(val);
    }
    splittedString.resize(_StrOriginal.length() + 1);
    return splittedString;
}
void BeautifyOBJFile(const char* file) {
    string sb;
    string sbLine;
    ifstream f(file);
    string line;
    while (getline(f, line)) {
        line = NormalizeSpace(line);
        vector<string> tokens = Split(line, " ");
        if (tokens[0] != "o" && tokens[0] != "v" && tokens[0] != "vt" && tokens[0] != "vn" && tokens[0] != "s" && tokens[0] != "f" && tokens[0] != "l") {
            line = "";
        }
        if (tokens[0] == "o" || line[0] == 'o') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'e'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 't'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'u'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 's'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'f'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'F'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'l'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'v'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'n'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'm'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '~'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '`'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '!'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '@'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '#'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '$'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '%'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '^'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '&'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '*'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '('), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ')'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '_'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '-'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '+'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '='), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '['), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '{'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ']'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '}'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ';'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ':'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), "'"[0]), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ','), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '<'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '>'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '?'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '/'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '"'), tokens[1].end());
            line = tokens[0] + " " + tokens[1];
        }
        if (tokens[0] == "usemtl" || line[0] == 'u' && line[1] == 's' && line[2] == 'e' && line[3] == 'm' && line[4] == 't' && line[5] == 'l') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'o'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'f'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'v'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'n'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '~'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '`'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '!'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '@'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '#'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '$'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '%'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '^'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '&'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '*'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '('), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ')'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '-'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '+'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '='), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '|'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '['), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '{'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ']'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '}'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ';'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ':'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), "'"[0]), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ','), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '<'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '.'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '>'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '?'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '/'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '"'), tokens[1].end());
            line = tokens[0] + " " + tokens[1];
        }
        if (tokens[0] == "s" || line[0] == 's') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'e'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 't'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'u'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'o'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'f'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'F'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'l'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'v'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'n'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'm'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '~'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '`'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '!'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '@'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '#'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '$'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '%'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '^'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '&'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '*'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '('), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ')'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '_'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '-'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '+'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '='), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '['), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '{'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ']'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '}'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ';'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ':'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), "'"[0]), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ','), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '<'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '>'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '?'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '/'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '"'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '~'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '`'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '!'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '@'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '#'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '$'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '%'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '^'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '&'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '*'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '('), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ')'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '_'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '-'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '+'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '='), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '|'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'q'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Q'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'w'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'W'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'e'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'E'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'r'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'R'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 't'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'T'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'y'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Y'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'u'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'U'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'i'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'I'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'O'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'p'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'P'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'a'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'A'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'S'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'd'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'D'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'F'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'g'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'G'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'h'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'H'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'j'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'J'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'k'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'K'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'l'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'L'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'z'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Z'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'x'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'X'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'c'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'C'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'v'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'V'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'b'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'B'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'n'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'N'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'm'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'M'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '['), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '{'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ']'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '}'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ';'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ':'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), "'"[0]), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ','), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '<'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '.'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '>'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '?'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '/'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '0'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '2'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '3'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '4'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '5'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '6'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '7'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '8'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '9'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '"'), tokens[1].end());
            line = tokens[0] + " " + tokens[1];
        }
        if (tokens[0] == "v" || line[0] == 'v' && line[1] == ' ') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'e'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 't'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'u'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'o'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'f'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'F'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'l'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'n'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'm'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '~'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '`'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '!'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '@'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '#'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '$'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '%'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '^'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '&'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '*'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '('), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ')'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '_'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '+'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '='), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '|'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'q'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Q'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'w'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'W'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'e'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'E'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'r'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'R'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 't'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'T'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'y'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Y'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'u'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'U'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'i'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'I'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'o'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'O'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'p'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'P'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'a'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'A'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 's'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'S'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'd'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'D'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'f'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'F'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'g'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'G'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'h'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'H'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'j'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'J'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'k'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'K'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'l'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'L'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'z'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Z'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'x'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'X'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'c'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'C'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'v'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'V'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'b'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'B'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'n'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'N'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'm'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'M'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '['), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '{'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ']'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '}'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ';'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ':'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), "'"[0]), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ','), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '<'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '>'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '?'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '/'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '"'), tokens[1].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '~'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '`'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '!'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '@'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '#'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '$'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '%'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '^'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '&'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '*'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '('), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ')'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '_'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '+'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '='), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '|'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'q'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Q'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'w'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'W'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'e'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'E'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'r'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'R'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 't'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'T'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'y'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Y'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'u'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'U'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'i'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'I'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'o'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'O'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'p'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'P'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'a'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'A'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 's'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'S'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'd'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'D'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'f'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'F'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'g'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'G'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'h'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'H'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'j'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'J'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'k'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'K'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'l'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'L'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'z'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Z'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'x'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'X'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'c'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'C'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'v'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'V'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'b'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'B'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'n'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'N'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'm'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'M'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '['), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '{'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ']'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '}'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ';'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ':'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), "'"[0]), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ','), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '<'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '>'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '?'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '/'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '"'), tokens[2].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '~'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '`'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '!'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '@'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '#'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '$'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '%'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '^'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '&'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '*'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '('), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ')'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '_'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '+'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '='), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '|'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'q'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'Q'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'w'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'W'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'e'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'E'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'r'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'R'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 't'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'T'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'y'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'Y'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'u'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'U'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'i'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'I'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'o'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'O'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'p'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'P'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'a'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'A'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 's'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'S'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'd'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'D'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'f'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'F'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'g'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'G'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'h'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'H'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'j'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'J'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'k'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'K'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'l'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'L'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'z'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'Z'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'x'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'X'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'c'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'C'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'v'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'V'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'b'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'B'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'n'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'N'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'm'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'M'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '['), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '{'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ']'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '}'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ';'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ':'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), "'"[0]), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ','), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '<'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '>'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '?'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '/'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '"'), tokens[3].end());
            line = tokens[0] + " " + tokens[1] + " " + tokens[2] + " " + tokens[3];
        }
        if (tokens[0] == "vt" || line[0] == 'v' && line[1] == 't') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'e'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'u'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'o'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'f'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'F'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'l'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'n'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'm'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '~'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '`'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '!'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '@'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '#'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '$'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '%'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '^'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '&'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '*'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '('), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ')'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '_'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '+'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '='), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '|'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'q'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Q'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'w'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'W'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'e'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'E'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'r'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'R'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 't'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'T'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'y'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Y'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'u'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'U'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'i'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'I'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'o'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'O'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'p'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'P'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'a'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'A'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 's'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'S'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'd'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'D'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'f'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'F'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'g'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'G'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'h'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'H'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'j'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'J'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'k'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'K'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'l'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'L'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'z'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Z'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'x'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'X'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'c'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'C'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'v'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'V'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'b'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'B'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'n'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'N'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'm'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'M'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '['), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '{'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ']'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '}'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ';'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ':'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), "'"[0]), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ','), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '<'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '>'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '?'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '/'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '"'), tokens[1].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '~'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '`'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '!'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '@'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '#'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '$'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '%'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '^'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '&'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '*'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '('), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ')'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '_'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '+'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '='), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '|'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'q'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Q'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'w'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'W'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'e'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'E'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'r'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'R'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 't'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'T'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'y'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Y'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'u'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'U'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'i'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'I'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'o'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'O'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'p'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'P'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'a'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'A'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 's'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'S'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'd'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'D'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'f'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'F'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'g'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'G'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'h'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'H'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'j'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'J'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'k'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'K'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'l'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'L'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'z'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Z'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'x'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'X'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'c'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'C'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'v'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'V'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'b'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'B'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'n'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'N'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'm'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'M'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '['), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '{'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ']'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '}'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ';'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ':'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), "'"[0]), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ','), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '<'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '>'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '?'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '/'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '"'), tokens[2].end());
            line = tokens[0] + " " + tokens[1] + " " + tokens[2];
        }
        if (tokens[0] == "vn" || line[0] == 'v' && line[1] == 'n') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'e'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 't'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'u'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'o'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'f'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'F'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'l'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'm'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '~'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '`'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '!'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '@'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '#'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '$'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '%'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '^'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '&'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '*'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '('), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ')'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '_'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '+'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '='), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '|'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'q'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Q'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'w'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'W'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'e'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'E'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'r'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'R'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 't'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'T'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'y'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Y'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'u'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'U'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'i'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'I'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'o'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'O'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'p'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'P'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'a'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'A'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 's'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'S'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'd'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'D'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'f'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'F'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'g'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'G'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'h'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'H'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'j'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'J'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'k'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'K'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'l'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'L'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'z'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'Z'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'x'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'X'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'c'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'C'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'v'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'V'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'b'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'B'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'n'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'N'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'm'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), 'M'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '['), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '{'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ']'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '}'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ';'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ':'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), "'"[0]), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ','), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '<'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '>'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '?'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '/'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '"'), tokens[1].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '~'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '`'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '!'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '@'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '#'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '$'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '%'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '^'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '&'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '*'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '('), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ')'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '_'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '+'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '='), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '|'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'q'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Q'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'w'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'W'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'e'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'E'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'r'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'R'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 't'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'T'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'y'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Y'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'u'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'U'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'i'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'I'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'o'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'O'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'p'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'P'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'a'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'A'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 's'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'S'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'd'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'D'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'f'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'F'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'g'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'G'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'h'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'H'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'j'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'J'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'k'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'K'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'l'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'L'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'z'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'Z'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'x'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'X'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'c'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'C'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'v'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'V'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'b'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'B'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'n'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'N'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'm'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), 'M'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '['), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '{'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ']'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '}'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ';'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ':'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), "'"[0]), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), ','), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '<'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '>'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '?'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '/'), tokens[2].end());
            tokens[2].erase(remove(tokens[2].begin(), tokens[2].end(), '"'), tokens[2].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '~'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '`'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '!'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '@'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '#'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '$'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '%'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '^'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '&'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '*'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '('), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ')'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '_'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '+'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '='), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '|'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'q'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'Q'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'w'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'W'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'e'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'E'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'r'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'R'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 't'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'T'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'y'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'Y'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'u'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'U'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'i'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'I'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'o'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'O'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'p'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'P'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'a'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'A'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 's'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'S'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'd'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'D'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'f'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'F'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'g'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'G'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'h'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'H'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'j'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'J'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'k'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'K'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'l'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'L'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'z'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'Z'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'x'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'X'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'c'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'C'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'v'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'V'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'b'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'B'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'n'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'N'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'm'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), 'M'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '['), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '{'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ']'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '}'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ';'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ':'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), "'"[0]), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), ','), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '<'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '>'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '?'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '/'), tokens[3].end());
            tokens[3].erase(remove(tokens[3].begin(), tokens[3].end(), '"'), tokens[3].end());
            line = tokens[0] + " " + tokens[1] + " " + tokens[2] + " " + tokens[3];
        }
        if (tokens[0] == "g" || line[0] == 'g') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'e'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 't'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'u'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 's'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'f'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'F'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'l'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'v'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'n'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'm'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '~'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '`'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '!'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '@'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '#'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '$'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '%'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '^'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '&'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '*'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '('), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ')'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '-'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '+'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '='), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '|'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '['), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '{'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ']'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '}'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ';'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ':'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), "'"[0]), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), ','), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '<'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '.'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '>'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '?'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '/'), tokens[1].end());
            tokens[1].erase(remove(tokens[1].begin(), tokens[1].end(), '"'), tokens[1].end());
            line = tokens[0] + " " + tokens[1];
        }
        if (tokens[0] == "f" || line[0] == 'f') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'e'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 't'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'u'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 's'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'F'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'l'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'v'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'n'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'm'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            for (size_t i = 1; i < tokens.size(); i++) {
                if (tokens[i] != "") {
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '~'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '`'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '!'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '@'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '#'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '$'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '%'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '^'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '&'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '*'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '('), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ')'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '_'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '-'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '+'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '='), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '|'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'q'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'Q'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'w'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'W'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'e'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'E'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'r'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'R'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 't'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'T'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'y'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'Y'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'u'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'U'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'i'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'I'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'o'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'O'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'p'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'P'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'a'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'A'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 's'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'S'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'd'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'D'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'f'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'F'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'g'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'G'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'h'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'H'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'j'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'J'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'k'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'K'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'l'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'L'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'z'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'Z'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'x'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'X'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'c'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'C'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'v'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'V'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'b'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'B'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'n'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'N'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'm'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'M'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '['), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '{'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ']'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '}'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ';'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ':'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), "'"[0]), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ','), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '<'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '.'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '>'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '?'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '"'), tokens[i].end());
                    sbLine.append(tokens[i] + " ");
                }
            }
            line = tokens[0] + " " + sbLine;
            line.erase(line.end() - 1);
        }
        if (tokens[0] == "l" || line[0] == 'l') {
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '~'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '`'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '!'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '@'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '#'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '$'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '%'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '^'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '&'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '*'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '('), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ')'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '_'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '-'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '+'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '='), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '|'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Q'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'w'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'W'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'e'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'E'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'r'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'R'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 't'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'T'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Y'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'u'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'U'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'i'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'I'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'O'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'p'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'P'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'a'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'A'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 's'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'S'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'd'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'D'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'f'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'F'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'g'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'G'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'h'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'H'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'j'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'J'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'k'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'K'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'L'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'Z'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'x'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'X'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'c'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'C'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'v'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'V'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'b'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'B'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'n'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'N'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'm'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), 'M'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '['), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '{'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ']'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '}'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ';'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ':'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), "'"[0]), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), ','), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '<'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '.'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '>'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '?'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '/'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '0'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '1'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '2'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '3'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '4'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '5'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '6'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '7'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '8'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '9'), tokens[0].end());
            tokens[0].erase(remove(tokens[0].begin(), tokens[0].end(), '"'), tokens[0].end());
            for (size_t i = 1; i < tokens.size(); i++) {
                if (tokens[i] != "") {
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '~'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '`'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '!'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '@'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '#'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '$'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '%'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '^'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '&'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '*'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '('), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ')'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '_'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '-'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '+'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '='), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '|'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'q'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'Q'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'w'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'W'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'e'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'E'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'r'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'R'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 't'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'T'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'y'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'Y'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'u'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'U'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'i'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'I'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'o'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'O'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'p'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'P'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'a'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'A'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 's'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'S'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'd'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'D'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'f'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'F'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'g'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'G'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'h'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'H'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'j'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'J'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'k'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'K'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'l'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'L'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'z'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'Z'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'x'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'X'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'c'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'C'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'v'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'V'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'b'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'B'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'n'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'N'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'm'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), 'M'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '['), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '{'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ']'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '}'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ';'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ':'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), "'"[0]), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), ','), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '<'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '.'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '>'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '?'), tokens[i].end());
                    tokens[i].erase(remove(tokens[i].begin(), tokens[i].end(), '"'), tokens[i].end());
                    sbLine.append(tokens[i] + " ");
                }
            }
            line = tokens[0] + " " + sbLine;
            line.erase(line.end() - 1);
        }
        if (line != "") {
            sb.append(line).append("\n");
            sbLine.clear();
        }
    }
    const char* result = sb.c_str();
    HANDLE hData;
    char* ptrData = NULL;
    size_t StrLen = strlen(result);
    hData = GlobalAlloc(GMEM_MOVEABLE | GMEM_DDESHARE, StrLen + 1);
    ptrData = (char*)GlobalLock(hData);
    memcpy(ptrData, result, StrLen + 1);
    GlobalUnlock(hData);
    OpenClipboard(NULL);
    EmptyClipboard();
    SetClipboardData(CF_TEXT, hData);
    CloseClipboard();
    f.close();
    MessageBeep(MB_OK);
    switch (MessageBox(NULL, _T("Data has been copied to clipboard.\nDo you want to open notepad to paste it directly?"), _T("Operation completed"), MB_SYSTEMMODAL | MB_ICONINFORMATION | MB_YESNO)) {
        case IDYES:
            ShellExecute(NULL, _T("Open"), _T("notepad.exe"), NULL, NULL, SW_SHOW);
            break;
    }
}
wstring ToWString(const string &s) {
    int len;
    int slength = (int)s.length() + 1;
    len = MultiByteToWideChar(CP_ACP, 0, s.c_str(), slength, 0, 0);
    wchar_t* buf = new wchar_t[len];
    MultiByteToWideChar(CP_ACP, 0, s.c_str(), slength, buf, len);
    wstring r(buf);
    delete[] buf;
    return r;
}
int main() {
    string p;
    string confirm;
    cout<<"Enter full path to the file. #Example: C:/MyFolder/FileName.obj."<<endl;
    RET:cout<<"Path: ";
    cin>>p;
    ifstream c(p);
    if (c.fail()) {
        MessageBox(NULL, _T("Failed to locate the file."), _T("Process"), MB_SYSTEMMODAL | MB_ICONERROR | MB_OK);
        goto RET;
    }
    LARGE_INTEGER size = {0};
    LPCWSTR lpFile = ToWString(p).c_str();
	HANDLE hInputFile = CreateFile(lpFile, GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, NULL);
	GetFileSizeEx(hInputFile, &size);
	cout<<fixed<<setprecision(2)<<"File size: "<<size.QuadPart<<" Bytes"<<endl;
	CloseHandle(hInputFile);
    cout<<"Processing, please wait..."<<endl;
    BeautifyOBJFile(p.c_str());
    cout<<"Done."<<endl;
    cout<<"Do you want to clean more files? y/n"<<endl;
    cin>>confirm;
    if (confirm == "y") {
        OpenClipboard(NULL);
        EmptyClipboard();
        CloseClipboard();
        cout<<"Memory flushed. (Clipboard Emptied)"<<endl;
        goto RET;
    }
    OpenClipboard(NULL);
    EmptyClipboard();
    CloseClipboard();
    cout<<"Memory flushed. (Clipboard Emptied)"<<endl;
    system("PAUSE");
	return 0;
}
